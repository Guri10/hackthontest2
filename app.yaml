runtime: python310  # Set to the latest supported Python runtime
entrypoint: gunicorn -b :$PORT main:app  # Replace 'main' with the name of your python file without the .py extension if it's not 'main'

env: standard  # Use the standard environment
instance_class: F1  # Choose the instance class that suits your needs

automatic_scaling:
  min_idle_instances: automatic  # GCP will decide the minimum number of instances based on the incoming traffic
  max_idle_instances: automatic  # GCP will decide the maximum number of instances based on the incoming traffic
  min_pending_latency: automatic  # Minimum amount of time a request should wait in the pending queue before the instance is scaled
  max_pending_latency: automatic  # Maximum amount of time a request is allowed to wait before the instance is scaled
  target_cpu_utilization: 0.65  # Target CPU utilization for scaling

handlers:
- url: /static
  static_dir: static/
- url: /.*
  script: auto

env_variables:
  FLASK_ENV: 'production'  # Set Flask environment to production


